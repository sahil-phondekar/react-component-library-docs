"use strict";(self.webpackChunkreact_component_library_docs=self.webpackChunkreact_component_library_docs||[]).push([[3769],{8453:(e,s,n)=>{n.d(s,{R:()=>i,x:()=>c});var t=n(6540);const d={},r=t.createContext(d);function i(e){const s=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:i(e.components),t.createElement(r.Provider,{value:s},e.children)}},9416:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>l,contentTitle:()=>c,default:()=>h,frontMatter:()=>i,metadata:()=>t,toc:()=>o});const t=JSON.parse('{"id":"typography/text","title":"Text","description":"The Text component is a flexible wrapper around standard HTML text elements such as `, , or `. It allows you to apply consistent typography styles using Tailwind CSS classes, including font size, weight, color, and truncation.","source":"@site/docs/typography/text.md","sourceDirName":"typography","slug":"/typography/text","permalink":"/react-component-library-docs/docs/typography/text","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Typography","permalink":"/react-component-library-docs/docs/category/typography"},"next":{"title":"Heading","permalink":"/react-component-library-docs/docs/typography/heading"}}');var d=n(4848),r=n(8453);const i={sidebar_position:1},c="Text",l={},o=[{value:"\ud83d\udce6 Import",id:"-import",level:2},{value:"\ud83e\uddf1 Props",id:"-props",level:2},{value:"\ud83d\ude80 Examples",id:"-examples",level:2},{value:"Basic Usage",id:"basic-usage",level:3},{value:"Custom Size and Weight",id:"custom-size-and-weight",level:3},{value:"Truncation Example",id:"truncation-example",level:3},{value:"Using a Custom Element",id:"using-a-custom-element",level:3},{value:"\ud83d\udca1 Best Practices",id:"-best-practices",level:2}];function a(e){const s={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(s.header,{children:(0,d.jsx)(s.h1,{id:"text",children:"Text"})}),"\n",(0,d.jsxs)(s.p,{children:["The ",(0,d.jsx)(s.code,{children:"Text"})," component is a flexible wrapper around standard HTML text elements such as ",(0,d.jsx)(s.code,{children:"<p>"}),", ",(0,d.jsx)(s.code,{children:"<span>"}),", or ",(0,d.jsx)(s.code,{children:"<div>"}),". It allows you to apply consistent typography styles using Tailwind CSS classes, including font size, weight, color, and truncation."]}),"\n",(0,d.jsx)(s.h2,{id:"-import",children:"\ud83d\udce6 Import"}),"\n",(0,d.jsx)(s.pre,{children:(0,d.jsx)(s.code,{className:"language-js",children:'import { Text } from "@sahilphondekar/react-component-library";\n'})}),"\n",(0,d.jsx)(s.h2,{id:"-props",children:"\ud83e\uddf1 Props"}),"\n",(0,d.jsxs)(s.table,{children:[(0,d.jsx)(s.thead,{children:(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.th,{children:"Name"}),(0,d.jsx)(s.th,{children:"Type"}),(0,d.jsx)(s.th,{children:"Default"}),(0,d.jsx)(s.th,{children:"Description"})]})}),(0,d.jsxs)(s.tbody,{children:[(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"as"})}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"elementType"})}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:'"p"'})}),(0,d.jsxs)(s.td,{children:["The HTML element to render (e.g., ",(0,d.jsx)(s.code,{children:"p"}),", ",(0,d.jsx)(s.code,{children:"span"}),", ",(0,d.jsx)(s.code,{children:"div"}),")"]})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"size"})}),(0,d.jsxs)(s.td,{children:["One of: ",(0,d.jsx)(s.code,{children:'"xs"'}),", ",(0,d.jsx)(s.code,{children:'"sm"'}),", ",(0,d.jsx)(s.code,{children:'"base"'}),", ",(0,d.jsx)(s.code,{children:'"lg"'}),", ",(0,d.jsx)(s.code,{children:'"xl"'}),", ",(0,d.jsx)(s.code,{children:'"2xl"'}),", ..., ",(0,d.jsx)(s.code,{children:'"9xl"'})]}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:'"base"'})}),(0,d.jsx)(s.td,{children:"Tailwind text size class"})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"weight"})}),(0,d.jsxs)(s.td,{children:["One of: ",(0,d.jsx)(s.code,{children:'"thin"'}),", ",(0,d.jsx)(s.code,{children:'"extralight"'}),", ",(0,d.jsx)(s.code,{children:'"light"'}),", ",(0,d.jsx)(s.code,{children:'"normal"'}),", ",(0,d.jsx)(s.code,{children:'"medium"'}),", ",(0,d.jsx)(s.code,{children:'"semibold"'}),", ",(0,d.jsx)(s.code,{children:'"bold"'}),", ",(0,d.jsx)(s.code,{children:'"extrabold"'}),", ",(0,d.jsx)(s.code,{children:'"black"'})]}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:'"normal"'})}),(0,d.jsx)(s.td,{children:"Font weight class"})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"color"})}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"string"})}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:'"text-gray-900"'})}),(0,d.jsx)(s.td,{children:"Tailwind text color class"})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"truncate"})}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"boolean"})}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"false"})}),(0,d.jsxs)(s.td,{children:["Whether to apply the ",(0,d.jsx)(s.code,{children:"truncate"})," utility"]})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"className"})}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"string"})}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:'""'})}),(0,d.jsx)(s.td,{children:"Additional Tailwind or custom class names"})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"children"})}),(0,d.jsxs)(s.td,{children:[(0,d.jsx)(s.code,{children:"node"})," (required)"]}),(0,d.jsx)(s.td,{children:"\u2014"}),(0,d.jsx)(s.td,{children:"The text content to display"})]})]})]}),"\n",(0,d.jsx)(s.h2,{id:"-examples",children:"\ud83d\ude80 Examples"}),"\n",(0,d.jsx)(s.h3,{id:"basic-usage",children:"Basic Usage"}),"\n",(0,d.jsx)(s.pre,{children:(0,d.jsx)(s.code,{className:"language-jsx",children:"<Text>This is a base-sized, normal weight paragraph.</Text>\n"})}),"\n",(0,d.jsx)(s.h3,{id:"custom-size-and-weight",children:"Custom Size and Weight"}),"\n",(0,d.jsx)(s.pre,{children:(0,d.jsx)(s.code,{className:"language-jsx",children:'<Text size="xl" weight="bold">\r\n  Bold and extra-large text\r\n</Text>\n'})}),"\n",(0,d.jsx)(s.h3,{id:"truncation-example",children:"Truncation Example"}),"\n",(0,d.jsx)(s.pre,{children:(0,d.jsx)(s.code,{className:"language-jsx",children:'<Text truncate className="w-40">\r\n  This is a long text that will be truncated.\r\n</Text>\n'})}),"\n",(0,d.jsx)(s.h3,{id:"using-a-custom-element",children:"Using a Custom Element"}),"\n",(0,d.jsx)(s.pre,{children:(0,d.jsx)(s.code,{className:"language-jsx",children:'<Text as="span" size="sm" color="text-blue-600">\r\n  Blue span text\r\n</Text>\n'})}),"\n",(0,d.jsx)(s.h2,{id:"-best-practices",children:"\ud83d\udca1 Best Practices"}),"\n",(0,d.jsxs)(s.ul,{children:["\n",(0,d.jsxs)(s.li,{children:["Use semantic elements with the ",(0,d.jsx)(s.code,{children:"as"})," prop (e.g., use ",(0,d.jsx)(s.code,{children:'"label"'})," for form labels)."]}),"\n",(0,d.jsxs)(s.li,{children:["Ensure a limited width on the container when using ",(0,d.jsx)(s.code,{children:"truncate"}),"."]}),"\n",(0,d.jsx)(s.li,{children:"Stick to Tailwind's theme colors for consistency in design."}),"\n",(0,d.jsxs)(s.li,{children:["Prefer ",(0,d.jsx)(s.code,{children:"Text"})," over raw HTML elements when styling is required."]}),"\n"]})]})}function h(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,d.jsx)(s,{...e,children:(0,d.jsx)(a,{...e})}):a(e)}}}]);